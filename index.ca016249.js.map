{"mappings":"YAAC,IAASA,ECCFC,EACAC,EACAC,EAEAC,ECLRC,EAAE,gBAAgBC,OAAM,WACpBD,EAAE,aAAaE,QAAQ,CAAEC,UAAW,GAAI,I,IAG5CH,EAAEI,QAAQC,QAAO,WACEL,EAAEI,QAAQD,YAEX,IACVH,EAAE,gBAAgBM,SAAS,UAE3BN,EAAE,gBAAgBO,YAAY,S,IFVzB,mBAAHZ,EAA6XS,OAAOI,QAAQC,WAApXC,UAAUf,EAAEe,QAAQf,EAAEgB,mBAAmBhB,EAAEiB,oBAAoBjB,EAAEkB,uBAAuB,SAASC,GAAG,IAAI,IAAIC,EAAEC,KAAKC,GAAGF,EAAEG,UAAUH,EAAEI,eAAeC,iBAAiBN,GAAGO,EAAE,EAAEJ,EAAEI,IAAIJ,EAAEI,KAAKN,KAAKM,EAAE,OAAOC,QAAQL,EAAEI,G,GAAM,mBAAmB1B,EAAE4B,UAAU5B,EAAE4B,QAAQ,SAAST,GAAG,IAAI,IAAIC,EAAEC,KAAKD,GAAG,IAAIA,EAAES,UAAU,CAAC,GAAGT,EAAEL,QAAQI,GAAG,OAAOC,EAAEA,EAAEA,EAAEU,U,CAAW,OAAO,I,GAG/XP,SAASQ,iBAAiB,oBAAoB,W,kDAIvCC,EAAeT,SAASU,cAAiB,qBACzCC,EAAuBX,SAACE,iBAAc,mBAI1CU,EAAAC,SAA8B,SACRC,GAEnBA,EAAAN,iBAAA,kBACIZ,G,yDASaI,SAAKU,cAAa,sBAChBK,EAAS,M,wBAMMN,EAARO,UAAVC,IAAJ,S,OAM4BN,EAAbE,SAAR,SAATC,GAE2BA,EAALN,iBAAjB,SAAT,SAATZ,GACmBE,KAALO,QAAR,UAEmBW,UAAVE,OAAP,UAC6BT,EAARO,UAAVE,OAAP,S,OAM8BlB,SAATmB,KAALX,iBAAjB,SAAT,SAAAZ,GAGyB,IAFCA,EAAFwB,UAIQpB,SAATU,cAAd,iBAAXM,UAAUE,OAAO,UACiBlB,SAATU,cAAd,YAAZM,UAAME,OAAO,U,IAE2B,GAGGT,EAARD,iBAAjB,SAAT,WAC8BR,SAATU,cAAd,iBAAjBM,UAAQE,OAAO,UACyBpB,KAALkB,UAAVE,OAAP,S,OC9DXxC,EAAasB,SAASU,cAAc,sBACpC/B,EAAcqB,SAASU,cAAc,iBACrC9B,EAAeoB,SAASU,cAAc,kBAEtC7B,EAAa,WACjB,IAAMwC,EAC0C,SAA9C1C,EAAY2C,aAAa,mBAA+B,EAC1D3C,EAAY4C,aAAa,iBAAkBF,GAC3C3C,EAAWsC,UAAUQ,OAAO,WAK5BC,eAH0BJ,EAEtB,mBADA,qBAE6BrB,SAASmB,K,EAG5CxC,EAAY6B,iBAAiB,QAAS3B,GACtCD,EAAa4B,iBAAiB,QAAS3B,GAGvCK,OAAOwC,WAAW,sBAAsBlB,iBAAiB,UAAU,SAAAZ,GAC5DA,EAAEJ,UACPd,EAAWsC,UAAUE,OAAO,WAC5BvC,EAAY4C,aAAa,iBAAiB,GAC1CE,eAAeE,iBAAiB3B,SAASmB,M,IEzB7CrC,EAAE,aAAa8C,MAAM,CACjBC,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,gBAAgB,G","sources":["src/js/modals.js","src/js/mobile-menu.js","src/js/back-to-top.js","src/js/slick.js"],"sourcesContent":["!function(e){\"function\"!=typeof e.matches&&(e.matches=e.msMatchesSelector||e.mozMatchesSelector||e.webkitMatchesSelector||function(e){for(var t=this,o=(t.document||t.ownerDocument).querySelectorAll(e),n=0;o[n]&&o[n]!==t;)++n;return Boolean(o[n])}),\"function\"!=typeof e.closest&&(e.closest=function(e){for(var t=this;t&&1===t.nodeType;){if(t.matches(e))return t;t=t.parentNode}return null})}(window.Element.prototype);\n\n\ndocument.addEventListener('DOMContentLoaded', function() {\n\n   /* Записываем в переменные массив элементов-кнопок и подложку.\n      Подложке зададим id, чтобы не влиять на другие элементы с классом overlay*/\n   var modalButtons = document.querySelectorAll('.js-open-modal'),\n       overlay      = document.querySelector('.js-overlay-modal'),\n       closeButtons = document.querySelectorAll('.js-modal-close');\n\n\n   /* Перебираем массив кнопок */\n   modalButtons.forEach(function(item){\n\n      /* Назначаем каждой кнопке обработчик клика */\n      item.addEventListener('click', function(e) {\n\n         /* Предотвращаем стандартное действие элемента. Так как кнопку разные\n            люди могут сделать по-разному. Кто-то сделает ссылку, кто-то кнопку.\n            Нужно подстраховаться. */\n         e.preventDefault();\n\n         /* При каждом клике на кнопку мы будем забирать содержимое атрибута data-modal\n            и будем искать модальное окно с таким же атрибутом. */\n         var modalId = this.getAttribute('data-modal'),\n             modalElem = document.querySelector('.modal[data-modal=\"' + modalId + '\"]');\n\n\n         /* После того как нашли нужное модальное окно, добавим классы\n            подложке и окну чтобы показать их. */\n         modalElem.classList.add('active');\n         overlay.classList.add('active');\n      }); // end click\n\n   }); // end foreach\n\n\n   closeButtons.forEach(function(item){\n\n      item.addEventListener('click', function(e) {\n         var parentModal = this.closest('.modal');\n\n         parentModal.classList.remove('active');\n         overlay.classList.remove('active');\n      });\n\n   }); // end foreach\n\n\n    document.body.addEventListener('keyup', function (e) {\n        var key = e.keyCode;\n\n        if (key == 27) {\n\n            document.querySelector('.modal.active').classList.remove('active');\n            document.querySelector('.overlay').classList.remove('active');\n        };\n    }, false);\n\n\n    overlay.addEventListener('click', function() {\n        document.querySelector('.modal.active').classList.remove('active');\n        this.classList.remove('active');\n    });\n\n\n\n\n}); // end ready","(() => {\n  const mobileMenu = document.querySelector('.js-menu-container');\n  const openMenuBtn = document.querySelector('.js-open-menu');\n  const closeMenuBtn = document.querySelector('.js-close-menu');\n\n  const toggleMenu = () => {\n    const isMenuOpen =\n      openMenuBtn.getAttribute('aria-expanded') === 'true' || false;\n    openMenuBtn.setAttribute('aria-expanded', !isMenuOpen);\n    mobileMenu.classList.toggle('is-open');\n\n    const scrollLockMethod = !isMenuOpen\n      ? 'disableBodyScroll'\n      : 'enableBodyScroll';\n    bodyScrollLock[scrollLockMethod](document.body);\n  };\n\n  openMenuBtn.addEventListener('click', toggleMenu);\n  closeMenuBtn.addEventListener('click', toggleMenu);\n\n  // Close the mobile menu on wider screens if the device orientation changes\n  window.matchMedia('(min-width: 768px)').addEventListener('change', e => {\n    if (!e.matches) return;\n    mobileMenu.classList.remove('is-open');\n    openMenuBtn.setAttribute('aria-expanded', false);\n    bodyScrollLock.enableBodyScroll(document.body);\n  });\n})();\n","$('.back-to-top').click(function () {\n    $('body,html').animate({ scrollTop: 0}, 800); \n});\n\n$(window).scroll(function() { \n    let scrolled = $(window).scrollTop(); \n\n    if(scrolled > 250) { \n        $('.back-to-top').addClass('active');\n    } else {\n        $('.back-to-top').removeClass('active');\n    }\n});","$('.one-time').slick({\n    dots: true,\n    infinite: true,\n    speed: 300,\n    slidesToShow: 1,\n    adaptiveHeight: true\n  });"],"names":["e1","mobileMenu","openMenuBtn","closeMenuBtn","toggleMenu","$","click","animate","scrollTop","window","scroll","addClass","removeClass","Element","prototype","matches","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","e","t","this","o","document","ownerDocument","querySelectorAll","n","Boolean","closest","nodeType","parentNode","addEventListener","overlay","querySelector","closeButtons","modalButtons","forEach","item","modalId","classList","add","remove","body","keyCode","isMenuOpen","getAttribute","setAttribute","toggle","bodyScrollLock","matchMedia","enableBodyScroll","slick","dots","infinite","speed","slidesToShow","adaptiveHeight"],"version":3,"file":"index.ca016249.js.map"}